The security loophole was that Movie.find_by_sql was used, and a parameter was passed into this query when a user posted to it. Thus, a malicious user can embed another sql query in there and change up the original query so that it returns credit card information or whatever the malicious attacker asks for. To fix this sql injection loophole, I changed it so that if the user does not pass in "All" as a parameter, it searches with Movie.where with a question mark. This question mark makes sure than only a parameter is passed in (no sql query syntax), so the attacker cannot get ahold of more information.